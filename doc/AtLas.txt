*atlas*

CONTENTS                                                        *atlas-contents*

  INTRODUCTION .......................................... |atlas-intro|
  PLUGINS ............................................... |atlas-plugins|
  AUTOCOMPLETION ........................................ |atlas-autocomplete|

==============================================================================
INTRODUCTION                                                     *atlas-intro*

Welcome to AtLas documentation! AtLas is a neovim distribution made for everyone that ease 
the process of programming. atlas-vim is part of the AtLas project

==============================================================================
PLUGINS                                                          *atlas-plugins*

Adding plugins can be done by editing the file in $XDG_CONFIG_HOME/nvim/lua/core/plugins.lua

For fast directing, do 
>
    :Plugfile
<

plugins follows these syntax requirements for clean, simple and readable

one-line plugins
>
  use { 'plugins' }
<

plugins with alias
>
  use { 'plugins', as = "plugins" }
<

plugins with requirements
>
  use { 'plugins',
        require = "plugins"
      }
<

multiple plugins with the same purpose

1 . Use comments or 
2. Use multiline use function

use {
    'plugins',
    'plugins'
}

=============================================================
AUTOCOMPLETION                                  *atlas-autocomplete*

Using lsp and nvim-cmp providing fast and reliable completion features

To install language server do 
> 
  :LspInstall
<

or 
>
  :LspInstallInfo
<

to list available plugins

=============================================================
MAPPINGS                                        *atlas-mapping*

Mappings is done by editing the mapping file
for quick directing do 
> 
  :Mapfile
<

mapping follows this syntax

1. Use single quote
map('')

2. Assign stuff on theire apropriate place
map('<mode>')

there are 3 mode, n for normal, i for insert, v for visual

3. Mapping done by
map('<mode>', '<Key>')

4. Assign command on the third argument
map('<mode>', '<Key>', '<command>')

5. Assign opt on the fourth argument (REQUIRED!) 
map('<mode>', '<Key>', '<command>', opt)

Following given syntax must be applied to have clean, minimalist and readable file

=============================================================
